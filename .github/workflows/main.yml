name: Debug Case Issue
on:
  push:
    branches: [ main, master, v1.1.0 ]

jobs:
  debug-all:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Debug directory structure (Unix)
      if: runner.os != 'Windows'
      run: |
        echo "=== Current directory ==="
        pwd
        echo "=== Git commit ==="
        git rev-parse HEAD
        echo "=== Directory listing (case sensitive) ==="
        ls -la
        echo "=== Looking for plasann directory ==="
        ls -la | grep -i plasann || echo "No plasann directory found"
        echo "=== Checking different case variations ==="
        test -d plasann && echo "plasann (lowercase) exists"
        test -d Plasann && echo "Plasann (capital P) exists"
        test -d PlasAnn && echo "PlasAnn (camel case) exists"
        test -d PLASANN && echo "PLASANN (uppercase) exists"
        
    - name: Debug directory structure (Windows)
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        Write-Host "=== Current directory ==="
        Get-Location
        Write-Host "=== Git commit ==="
        git rev-parse HEAD
        Write-Host "=== Directory listing ==="
        Get-ChildItem | Format-Table Name, Length, LastWriteTime
        Write-Host "=== Looking for plasann directory variations ==="
        if (Test-Path "plasann") { Write-Host "plasann (lowercase) exists" }
        if (Test-Path "Plasann") { Write-Host "Plasann (capital P) exists" }
        if (Test-Path "PlasAnn") { Write-Host "PlasAnn (camel case) exists" }
        if (Test-Path "PLASANN") { Write-Host "PLASANN (uppercase) exists" }
        Write-Host "=== Trying to list contents if found ==="
        try {
          Get-ChildItem plasann -ErrorAction Stop | Format-Table Name
          Write-Host "Successfully listed plasann/ contents"
        } catch {
          Write-Host "Could not list plasann/ contents: $($_.Exception.Message)"
        }
        
    - name: Check pyproject.toml references
      run: |
        echo "=== Contents of pyproject.toml ==="
        cat pyproject.toml
