name: PlasAnn Cross-Platform Tests

on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
        exclude:
          # Skip some combinations to reduce job count
          - os: windows-latest
            python-version: '3.8'
          - os: windows-latest  
            python-version: '3.9'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y ncbi-blast+ prodigal
        # Install infernal via conda for Linux
        wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh -O miniforge.sh
        bash miniforge.sh -b -p $HOME/miniforge3
        source $HOME/miniforge3/bin/activate
        conda install -c bioconda infernal -y
        echo "$HOME/miniforge3/bin" >> $GITHUB_PATH

    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install blast prodigal infernal

    - name: Install system dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        # Windows testing without external tools for now
        echo "Skipping external dependencies on Windows"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Test basic functionality
      run: |
        PlasAnn --version
        python -c "import plasann; print('‚úÖ PlasAnn imported successfully')"

    - name: Test dependency detection (Unix)
      if: runner.os != 'Windows'
      run: |
        PlasAnn --check-deps

    - name: Test help command
      run: |
        PlasAnn -h

    - name: Display system info
      run: |
        echo "üñ•Ô∏è System: ${{ matrix.os }}"
        echo "üêç Python: ${{ matrix.python-version }}"
        echo "üèõÔ∏è Architecture: $(uname -m)" || echo "Architecture: Windows"
        python --version
